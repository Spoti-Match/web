{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\ProjektZesp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { KeycloakAuthGuard } from 'keycloak-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"keycloak-angular\";\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(router, keycloak) {\n    super(router, keycloak);\n    this.router = router;\n    this.keycloak = keycloak;\n  }\n\n  isAccessAllowed(route, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.authenticated) {\n        yield _this.keycloak.login({\n          redirectUri: window.location.origin + state.url\n        });\n      }\n\n      return _this.authenticated;\n    })();\n  }\n\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.KeycloakService));\n};\n\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/ProjektZesp/src/auth/auth.guard.ts"],"names":["KeycloakAuthGuard","i0","i1","i2","AuthGuard","constructor","router","keycloak","isAccessAllowed","route","state","authenticated","login","redirectUri","window","location","origin","url","ɵfac","AuthGuard_Factory","t","ɵɵinject","Router","KeycloakService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,kBAAlC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAO,MAAMC,SAAN,SAAwBJ,iBAAxB,CAA0C;AAC7CK,EAAAA,WAAW,CAACC,MAAD,EAASC,QAAT,EAAmB;AAC1B,UAAMD,MAAN,EAAcC,QAAd;AACA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACKC,EAAAA,eAAe,CAACC,KAAD,EAAQC,KAAR,EAAe;AAAA;;AAAA;AAChC,UAAI,CAAC,KAAI,CAACC,aAAV,EAAyB;AACrB,cAAM,KAAI,CAACJ,QAAL,CAAcK,KAAd,CAAoB;AACtBC,UAAAA,WAAW,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBN,KAAK,CAACO;AADtB,SAApB,CAAN;AAGH;;AACD,aAAO,KAAI,CAACN,aAAZ;AANgC;AAOnC;;AAb4C;;AAejDP,SAAS,CAACc,IAAV,GAAiB,SAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAAE,SAAO,KAAKA,CAAC,IAAIhB,SAAV,EAAqBH,EAAE,CAACoB,QAAH,CAAYnB,EAAE,CAACoB,MAAf,CAArB,EAA6CrB,EAAE,CAACoB,QAAH,CAAYlB,EAAE,CAACoB,eAAf,CAA7C,CAAP;AAAuF,CAAxI;;AACAnB,SAAS,CAACoB,KAAV,GAAkB,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEtB,SAAT;AAAoBuB,EAAAA,OAAO,EAAEvB,SAAS,CAACc,IAAvC;AAA6CU,EAAAA,UAAU,EAAE;AAAzD,CAAtB,CAAhC","sourcesContent":["import { KeycloakAuthGuard } from 'keycloak-angular';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nimport * as i2 from \"keycloak-angular\";\r\nexport class AuthGuard extends KeycloakAuthGuard {\r\n    constructor(router, keycloak) {\r\n        super(router, keycloak);\r\n        this.router = router;\r\n        this.keycloak = keycloak;\r\n    }\r\n    async isAccessAllowed(route, state) {\r\n        if (!this.authenticated) {\r\n            await this.keycloak.login({\r\n                redirectUri: window.location.origin + state.url,\r\n            });\r\n        }\r\n        return this.authenticated;\r\n    }\r\n}\r\nAuthGuard.ɵfac = function AuthGuard_Factory(t) { return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.KeycloakService)); };\r\nAuthGuard.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthGuard, factory: AuthGuard.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}